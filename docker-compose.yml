version: "3"
services:
  reverse-proxy:
    image: traefik:v2.3
    command:
      - "--providers.docker"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - 80:80
      - 443:443
    depends_on:
      - front
      - back
      - maps
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./letsencrypt:/letsencrypt


  turn:
    image: instrumentisto/coturn:4.5
    volumes:
      - ./coturn/turnserver.conf:/etc/coturn/turnserver.conf
    ports:
      - "3478:3478"
      - "3478:3478/udp"
      - "49152-49192:49152-49192"
      - "49152-49192:49152-49192/udp"


  front:
    image: thecodingmachine/nodejs:14
    environment:
      DEBUG_MODE: "$DEBUG_MODE"
      JITSI_URL: $JITSI_URL
      JITSI_PRIVATE_MODE: "$JITSI_PRIVATE_MODE"
      HOST: "0.0.0.0"
      NODE_ENV: development
      API_URL: "api.${DOMAIN}"
      ADMIN_URL: "admin.${DOMAIN}"  # ADMIN_URL seems to be unused
      START_MAP_URL: "$START_MAP_URL"
      STARTUP_COMMAND_1: yarn install
      TURN_SERVER: "turn:turn.${DOMAIN}:3478"
      TURN_USER: workadventure
      TURN_PASSWORD: supersicher
    command: yarn run start
    volumes:
      - ./workadventure/front:/usr/src/app
    labels:
      # Forward HTTP to HTTPS
      - "traefik.http.middlewares.front-https.redirectscheme.scheme=https"

      - "traefik.http.routers.front.rule=Host(`play.${DOMAIN}`)"
      - "traefik.http.routers.front.entryPoints=web"
      - "traefik.http.routers.front.middlewares=front-https"

      # Serve frontend via HTTPS, gzip compressed
      - "traefik.http.middlewares.front-compress.compress=true"

      - "traefik.http.services.front-ssl.loadbalancer.server.port=8080"

      - "traefik.http.routers.front-ssl.rule=Host(`play.${DOMAIN}`)"
      - "traefik.http.routers.front-ssl.entryPoints=websecure"
      - "traefik.http.routers.front-ssl.tls=true"
      - "traefik.http.routers.front-ssl.tls.certresolver=myresolver"
      - "traefik.http.routers.front-ssl.middlewares=front-compress"


  back:
    image: thecodingmachine/nodejs:12
    command: yarn dev
    environment:
      STARTUP_COMMAND_1: yarn install
      SECRET_KEY: yourSecretKey
      SECRET_JITSI_KEY: "$SECRET_JITSI_KEY"
      ALLOW_ARTILLERY: "true"
      ADMIN_API_TOKEN: "$ADMIN_API_TOKEN"
      JITSI_URL: $JITSI_URL
      JITSI_ISS: $JITSI_ISS
    volumes:
      - ./workadventure/back:/usr/src/app
    labels:
      # Forward HTTP to HTTPS
      - "traefik.http.middlewares.back-https.redirectscheme.scheme=https"

      - "traefik.http.routers.back.rule=Host(`api.${DOMAIN}`)"
      - "traefik.http.routers.back.entryPoints=web"
      - "traefik.http.routers.back.middlewares=back-https"

      # Serve backend via HTTPS
      - "traefik.http.services.back-ssl.loadbalancer.server.port=8080"

      - "traefik.http.routers.back-ssl.rule=Host(`api.${DOMAIN}`)"
      - "traefik.http.routers.back-ssl.entryPoints=websecure"
      - "traefik.http.routers.back-ssl.tls=true"
      - "traefik.http.routers.back-ssl.tls.certresolver=myresolver"


  messages:
    image: thecodingmachine/workadventure-back-base:latest
    environment:
      STARTUP_COMMAND_1: yarn install
      STARTUP_COMMAND_2: yarn run proto:watch
    volumes:
      - ./workadventure/messages:/usr/src/app
      - ./workadventure/back:/usr/src/back
      - ./workadventure/front:/usr/src/front
    labels:
      - "traefik.enable=false"


  maps:
    image: nginx:alpine
    volumes:
      - ./maps:/usr/share/nginx/html
    labels:
      # Forward HTTP to HTTPS
      - "traefik.http.middlewares.maps-https.redirectscheme.scheme=https"

      - "traefik.http.routers.maps.rule=Host(`maps.${DOMAIN}`)"
      - "traefik.http.routers.maps.entryPoints=web"
      - "traefik.http.routers.maps.middlewares=maps-https"

      # Serve maps via HTTPS, add CORS headers and gzip compression
      - "traefik.http.middlewares.maps-cors.headers.accessControlAllowOriginList=*"
      - "traefik.http.middlewares.maps-compress.compress=true"

      - "traefik.http.services.maps-ssl.loadbalancer.server.port=80"

      - "traefik.http.routers.maps-ssl.rule=Host(`maps.${DOMAIN}`)"
      - "traefik.http.routers.maps-ssl.entryPoints=websecure"
      - "traefik.http.routers.maps-ssl.tls=true"
      - "traefik.http.routers.maps-ssl.tls.certresolver=myresolver"
      - "traefik.http.routers.maps-ssl.middlewares=maps-cors,maps-compress"

  landing-page:
    image: nginx:alpine
    volumes:
      - ./landing-page:/usr/share/nginx/html
    labels:
      # Forward HTTP to HTTPS
      - "traefik.http.middlewares.landing-page-https.redirectscheme.scheme=https"

      - "traefik.http.routers.landing-page.rule=Host(`${DOMAIN}`, `${LANDING_DOMAIN}`)"
      - "traefik.http.routers.landing-page.entryPoints=web"
      - "traefik.http.routers.landing-page.middlewares=landing-page-https"

      # Serve landing page via HTTPS, gzip compressed
      - "traefik.http.middlewares.landing-page-compress.compress=true"

      - "traefik.http.services.landing-page-ssl.loadbalancer.server.port=80"

      - "traefik.http.routers.landing-page-ssl.rule=Host(`${DOMAIN}`, `${LANDING_DOMAIN}`)"
      - "traefik.http.routers.landing-page-ssl.entryPoints=websecure"
      - "traefik.http.routers.landing-page-ssl.tls=true"
      - "traefik.http.routers.landing-page-ssl.tls.certresolver=myresolver"
      - "traefik.http.routers.landing-page-ssl.middlewares=landing-page-compress"
